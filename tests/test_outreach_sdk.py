import pytest

import outreach_sdk
from outreach_sdk.resources.exceptions import ResourceNotSupportedException


def test_create_resource(creds):
    credentials = creds()
    resource = outreach_sdk.resource("prospects", credentials)
    assert resource.url == "https://api.outreach.io/api/v2/prospects"
    assert resource.resource_type == "prospect"
    assert resource.session.headers["User-Agent"] == "Outreach SDK Python/0.6.0"
    assert resource.session.headers["Content-Type"] == "application/vnd.api+json"
    assert resource.session.headers["Authorization"] == "Bearer access_token"
    assert resource.filter_fields == {
        "createdAt",
        "emails",
        "engagedAt",
        "engagedScore",
        "externalSource",
        "firstName",
        "githubUsername",
        "id",
        "lastName",
        "linkedInId",
        "linkedInSlug",
        "stackOverflowId",
        "title",
        "touchedAt",
        "twitterUsername",
        "updatedAt",
        "account.buyerIntentScore",
        "account.createdAt",
        "account.customId",
        "account.domain",
        "account.name",
        "account.named",
        "account.touchedAt",
        "account.updatedAt",
        "activeSequenceStates.callCompletedAt",
        "activeSequenceStates.clickCount",
        "activeSequenceStates.createdAt",
        "activeSequenceStates.deliverCount",
        "activeSequenceStates.id",
        "activeSequenceStates.openCount",
        "activeSequenceStates.pauseReason",
        "activeSequenceStates.repliedAt",
        "activeSequenceStates.replyCount",
        "activeSequenceStates.state",
        "activeSequenceStates.stateChangedAt",
        "activeSequenceStates.updatedAt",
        "calls.createdAt",
        "calls.from",
        "calls.outcome",
        "calls.recordingUrl",
        "calls.state",
        "calls.to",
        "calls.updatedAt",
        "calls.userCallType",
        "emailAddresses.bouncedAt",
        "emailAddresses.email",
        "emailAddresses.emailType",
        "emailAddresses.order",
        "emailAddresses.status",
        "emailAddresses.statusChangedAt",
        "emailAddresses.unsubscribedAt",
        "phoneNumbers.number",
        "phoneNumbers.order",
        "phoneNumbers.phoneType",
        "phoneNumbers.status",
        "phoneNumbers.statusChangedAt",
        "sequenceStates.callCompletedAt",
        "sequenceStates.clickCount",
        "sequenceStates.createdAt",
        "sequenceStates.deliverCount",
        "sequenceStates.id",
        "sequenceStates.openCount",
        "sequenceStates.pauseReason",
        "sequenceStates.repliedAt",
        "sequenceStates.replyCount",
        "sequenceStates.state",
        "sequenceStates.stateChangedAt",
        "sequenceStates.updatedAt",
        "tasks.autoskipAt",
        "tasks.createdAt",
        "tasks.dueAt",
        "tasks.scheduledAt",
        "tasks.state",
        "tasks.stateChangedAt",
        "tasks.taskType",
        "tasks.updatedAt",
        "owner.createdAt",
        "owner.email",
        "owner.id",
        "owner.firstName",
        "owner.lastName",
        "owner.locked",
        "owner.updatedAt",
        "owner.username",
    }
    assert resource.readonly_fields == {
        "callOptedOut",
        "callsOptedAt",
        "clickCount",
        "contactHistogram",
        "createdAt",
        "emailOptedOut",
        "emailsOptedAt",
        "engagedAt",
        "engagedScore",
        "externalSource",
        "id",
        "linkedInSlug",
        "name",
        "openCount",
        "optedOutAt",
        "replyCount",
        "smsOptedAt",
        "smsOptedOut",
        "timeZoneIana",
        "timeZoneInferred",
        "touchedAt",
        "updatedAt",
        "account.contactHistogram",
        "account.createdAt",
        "account.externalSource",
        "account.touchedAt",
        "account.trashedAt",
        "account.updatedAt",
        "activeSequenceStates.activeAt",
        "activeSequenceStates.bounceCount",
        "activeSequenceStates.callCompletedAt",
        "activeSequenceStates.clickCount",
        "activeSequenceStates.createdAt",
        "activeSequenceStates.deliverCount",
        "activeSequenceStates.errorReason",
        "activeSequenceStates.failureCount",
        "activeSequenceStates.id",
        "activeSequenceStates.negativeReplyCount",
        "activeSequenceStates.neutralReplyCount",
        "activeSequenceStates.openCount",
        "activeSequenceStates.optOutCount",
        "activeSequenceStates.pauseReason",
        "activeSequenceStates.positiveReplyCount",
        "activeSequenceStates.repliedAt",
        "activeSequenceStates.replyCount",
        "activeSequenceStates.scheduleCount",
        "activeSequenceStates.state",
        "activeSequenceStates.stateChangedAt",
        "activeSequenceStates.updatedAt",
        "calls.createdAt",
        "calls.state",
        "calls.stateChangedAt",
        "calls.uid",
        "calls.updatedAt",
        "calls.voicemailRecordingUrl",
        "emailAddresses.bouncedAt",
        "emailAddresses.createdAt",
        "emailAddresses.statusChangedAt",
        "emailAddresses.unsubscribedAt",
        "emailAddresses.updatedAt",
        "phoneNumbers.createdAt",
        "phoneNumbers.statusChangedAt",
        "phoneNumbers.updatedAt",
        "owner.createdAt",
        "owner.currentSignInAt",
        "owner.id",
        "owner.lastSignInAt",
        "owner.name",
        "owner.passwordExpiresAt",
        "owner.updatedAt",
        "sequenceStates.activeAt",
        "sequenceStates.bounceCount",
        "sequenceStates.callCompletedAt",
        "sequenceStates.clickCount",
        "sequenceStates.createdAt",
        "sequenceStates.deliverCount",
        "sequenceStates.errorReason",
        "sequenceStates.failureCount",
        "sequenceStates.id",
        "sequenceStates.negativeReplyCount",
        "sequenceStates.neutralReplyCount",
        "sequenceStates.openCount",
        "sequenceStates.optOutCount",
        "sequenceStates.pauseReason",
        "sequenceStates.positiveReplyCount",
        "sequenceStates.repliedAt",
        "sequenceStates.replyCount",
        "sequenceStates.scheduleCount",
        "sequenceStates.state",
        "sequenceStates.stateChangedAt",
        "sequenceStates.updatedAt",
        "tasks.compiledSequenceTemplateHtml",
        "tasks.completed",
        "tasks.completedAt",
        "tasks.createdAt",
        "tasks.scheduledAt",
        "tasks.state",
        "tasks.stateChangedAt",
        "tasks.taskType",
        "tasks.updatedAt",
    }
    assert resource.sort_fields == {
        "createdAt",
        "engagedAt",
        "engagedScore",
        "externalSource",
        "firstName",
        "githubUsername",
        "id",
        "lastName",
        "linkedInId",
        "linkedInSlug",
        "stackOverflowId",
        "title",
        "touchedAt",
        "twitterUsername",
        "updatedAt",
        "account.buyerIntentScore",
        "account.createdAt",
        "account.customId",
        "account.domain",
        "account.name",
        "account.named",
        "account.touchedAt",
        "account.updatedAt",
        "activeSequenceStates.callCompletedAt",
        "activeSequenceStates.clickCount",
        "activeSequenceStates.createdAt",
        "activeSequenceStates.deliverCount",
        "activeSequenceStates.id",
        "activeSequenceStates.openCount",
        "activeSequenceStates.pauseReason",
        "activeSequenceStates.repliedAt",
        "activeSequenceStates.replyCount",
        "activeSequenceStates.state",
        "activeSequenceStates.stateChangedAt",
        "activeSequenceStates.updatedAt",
        "calls.createdAt",
        "calls.from",
        "calls.outcome",
        "calls.recordingUrl",
        "calls.state",
        "calls.to",
        "calls.updatedAt",
        "calls.userCallType",
        "emailAddresses.bouncedAt",
        "emailAddresses.email",
        "emailAddresses.emailType",
        "emailAddresses.order",
        "emailAddresses.status",
        "emailAddresses.statusChangedAt",
        "emailAddresses.unsubscribedAt",
        "phoneNumbers.number",
        "phoneNumbers.order",
        "phoneNumbers.phoneType",
        "phoneNumbers.status",
        "phoneNumbers.statusChangedAt",
        "owner.createdAt",
        "owner.email",
        "owner.firstName",
        "owner.id",
        "owner.lastName",
        "owner.updatedAt",
        "owner.username",
        "sequenceStates.callCompletedAt",
        "sequenceStates.clickCount",
        "sequenceStates.createdAt",
        "sequenceStates.deliverCount",
        "sequenceStates.id",
        "sequenceStates.openCount",
        "sequenceStates.pauseReason",
        "sequenceStates.repliedAt",
        "sequenceStates.replyCount",
        "sequenceStates.state",
        "sequenceStates.stateChangedAt",
        "sequenceStates.updatedAt",
        "tasks.autoskipAt",
        "tasks.createdAt",
        "tasks.dueAt",
        "tasks.scheduledAt",
        "tasks.state",
        "tasks.stateChangedAt",
        "tasks.taskType",
        "tasks.updatedAt",
    }


def test_non_existing_resource(creds):
    credentials = creds()
    with pytest.raises(ResourceNotSupportedException):
        outreach_sdk.resource("nothing", credentials)
